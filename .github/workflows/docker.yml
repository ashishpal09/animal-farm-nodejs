name: CI-CD

on:
  push:
    branches:
      - dev
      - pre-release
      - master
      - ASIT-485
    tags:
      - '*'
  # pull_request:
  #   types: [opened, synchronize, reopened]
  #   branches:
  #     - dev
  #     - pre-release
  #     - master
  workflow_dispatch:
    inputs:
      environment:
          description: 'Target environment'
          required: true
          type: choice
          options:
            - dev
            - pre-release

      db_operation:
         description: 'Database operation to perform'
         required: false
         type: choice
         options:
           - backup
           - test
           - restore

env:
  JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.16-8/x64
  # JAVA_VERSION: "17.0.2"
  # JAVA_HOME: "/usr/java/openjdk-17"
  MAVEN_OPTS: -Xmx2G
  SETTINGS_FILE: ./.gitlab-ci-templates/ci-settings.xml
  ATLAS_OPTS: -Dmaven.repo.local=/home/runner/work/jira-apps-bi-core/.m2/repository
  # GITLAB_MAVEN_USERNAME: ${{ secrets.GITLAB_MAVEN_USERNAME }}
  GITLAB_MAVEN_TOKEN: ${{ secrets.GITLAB_MAVEN_TOKEN }}

##############################################################################################################
### Setup Environment
##############################################################################################################

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      ENV_NAME: ${{ steps.setenv.outputs.ENV_NAME }}
    steps:
      - id: setenv
        env:
          DISPATCH_ENV: ${{ github.event.inputs.environment || '' }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_BASE_REF_NAME: ${{ github.base_ref }}
        run: |
          echo "Determining environment and image name..."
          if [[ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]]; then
            ENV_NAME="$DISPATCH_ENV"
          elif [[ "$GITHUB_BASE_REF_NAME" == "dev"  || "$GITHUB_REF_NAME" == "dev" ]]; then
            ENV_NAME=dev
          elif [[ "$GITHUB_BASE_REF_NAME" == "pre-release" || "$GITHUB_REF_NAME" == "pre-release" ]]; then
            ENV_NAME=pre-release
          elif [[ "$GITHUB_REF" == refs/tags/* || "$GITHUB_BASE_REF_NAME" == "master" || "$GITHUB_REF_NAME" == "master" ]]; then
            ENV_NAME=prod
          else
            ENV_NAME=dev
          fi
          echo "ENV_NAME=$ENV_NAME"
          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_OUTPUT

##############################################################################################################
### CI Code Check
##############################################################################################################

  frontend-check:
    name: frontend-check-${{ needs.set-environment.outputs.ENV_NAME }}
    environment: ${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4


  sonarcloud-check:
    name: sonarcloud-check-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment , frontend-check]
    environment: ${{ needs.set-environment.outputs.ENV_NAME }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4


##############################################################################################################
### Dependencies Check
##############################################################################################################

  # dependencies-check:
  #   name: depedencies-check-${{ needs.set-environment.outputs.ENV_NAME }}
  #   needs: [set-environment]
  #   environment: ${{ needs.set-environment.outputs.ENV_NAME }}
  #   runs-on:
  #     group: st-heavy-runners
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: 'temurin'
  #         java-version: '17'
  #         server-id: gitlab-maven
  #         server-username: gitlab-ci-token
  #         server-password: ${{ secrets.GITLAB_MAVEN_TOKEN }}

  #     - name: Cache Maven dependencies
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.m2/repository
  #         key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
  #         restore-keys: |
  #           maven-${{ runner.os }}-

  #     - name: Cache Atlassian SDK
  #       id: sdk-cache
  #       uses: actions/cache@v4
  #       with:
  #         path: atlassian-plugin-sdk-8.2.8
  #         key: sdk-${{ runner.os }}-atlassian-8.2.8

  #     - name: Install Atlassian SDK
  #       if: steps.sdk-cache.outputs.cache-hit != 'true'
  #       run: |
  #         curl -L https://packages.atlassian.com/maven-external/com/atlassian/amps/atlassian-plugin-sdk/8.2.8/atlassian-plugin-sdk-8.2.8.tar.gz | tar -xz
  #         echo "Downloaded and extracted Atlassian SDK"

  #     - name: Set PATH
  #       run: echo "${{ github.workspace }}/atlassian-plugin-sdk-8.2.8/bin" >> $GITHUB_PATH
  #     - name: OWASP Dependency Check
  #       run: |
  #         atlas-mvn verify -B -T ${{ vars.THREADS_COUNT }} \
  #           -P dependencies-check,powerbi,tableau,bigquery,sql \
  #           -DnvdApiKey=${{ secrets.NVD_API_KEY }} \
  #           -s $SETTINGS_FILE $ATLAS_OPTS

  #     - name: Upload Report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: dependency-check-report
  #         path: target/dependency-check-report.html

##############################################################################################################
### Integration Test (H2 Integration)
##############################################################################################################


  h2-database-integration:
    name: h2-db-integerations-check
    runs-on: ubuntu-latest
    needs: [ set-environment , sonarcloud-check ]
    environment: ${{ needs.set-environment.outputs.ENV_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        # Standard step to pull repo content [11][14].

#############################################################################################################
## Integration Test (MySQL Integration)
#############################################################################################################

  mysql-database-integration:
    name: mysql-integerations-check
    runs-on: ubuntu-latest
    needs: [ set-environment , sonarcloud-check ]
    environment: ${{ needs.set-environment.outputs.ENV_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

# ############################################################################################################
# # Integration Test (MsSQL Integration)
# ############################################################################################################

  mssql-database-integration:
    name: mssql-integerations-check
    runs-on: ubuntu-latest
    needs: [ set-environment , sonarcloud-check ]
    environment: ${{ needs.set-environment.outputs.ENV_NAME }}
    steps:
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

# #############################################################################################################
# ## Integration Test (Oracle Integration)
# #############################################################################################################

  oracle-database-integration:
    name: Oracle Integration Tests
    runs-on: ubuntu-latest
    needs: [ set-environment , sonarcloud-check ]
    environment: ${{ needs.set-environment.outputs.ENV_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

# ##############################################################################
# ##################### Postgres database ######################################

  postgres-database-integration:
    name: postgres-db-integration-check
    runs-on: ubuntu-latest
    needs: [ set-environment , sonarcloud-check ]
    environment: ${{ needs.set-environment.outputs.ENV_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4




# ###############################################################################
# ########################## ENDPOINT & SERVICE INTEGRATION ####################
# ###############################################################################

  endpoint-integration-test:
    name: endpoint-integration-test
    runs-on: ubuntu-latest
    needs: [ set-environment , h2-database-integration , mysql-database-integration , mssql-database-integration , oracle-database-integration , postgres-database-integration]
    environment: ${{ needs.set-environment.outputs.ENV_NAME }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'


  service-integration-test:
    name: service-integration-test
    runs-on: ubuntu-latest
    needs: [ set-environment , h2-database-integration , mysql-database-integration , mssql-database-integration , oracle-database-integration , postgres-database-integration]
    environment: ${{ needs.set-environment.outputs.ENV_NAME }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'


#########################################################################################################################################################
##################################################################################################################################################

  update-plugins-version:
    name: update-plugin-version
    runs-on: ubuntu-latest
    needs: [ set-environment , service-integration-test , endpoint-integration-test ]
    environment: ${{ needs.set-environment.outputs.ENV_NAME }}
    env:
      NEXT_VERSION: ""  # optional: override via `env` or `vars`
      PLUGIN_PREFIX: ""  # optional
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4


#  # # ------------------ ARTIFACT GENERATION STAGE ------------------
  generate-artifact:
    name: generate-artifact
    runs-on: ubuntu-latest
    needs: [ set-environment , update-plugins-version ]
    environment: ${{ needs.set-environment.outputs.ENV_NAME }}
    strategy:
      matrix:
        APP: [ powerbi , tableau , bigquery , sql ]

    steps:
      - uses: actions/checkout@v4


  
