name: CI-CD

on:
  pull_request:
    branches:
      - dev
      - pre-release
      - master
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - dev
          - pre-release
          - prod

##############################################################################################################
### Setup Environment
##############################################################################################################

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      ENV_NAME: ${{ steps.setenv.outputs.ENV_NAME }}
    steps:
      - id: setenv
        env:
          DISPATCH_ENV: ${{ github.event.inputs.environment || '' }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_BASE_REF_NAME: ${{ github.base_ref }}
        run: |
          echo "Determining environment..."
          if [[ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]]; then
            ENV_NAME="$DISPATCH_ENV"
          elif [[ "$GITHUB_BASE_REF_NAME" == "dev" ]]; then
            ENV_NAME=dev
          elif [[ "$GITHUB_BASE_REF_NAME" == "pre-release" ]]; then
            ENV_NAME=pre-release
          elif [[ "$GITHUB_BASE_REF_NAME" == "master" ]]; then
            ENV_NAME=prod
          else
            ENV_NAME=unknown
          fi
          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_OUTPUT

##############################################################################################################
### Code Checks (Frontend + Sonar)
##############################################################################################################

  frontend-check:
    name: frontend-check-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'pull_request' && (github.base_ref == 'dev' || github.base_ref == 'pre-release' || github.base_ref == 'master'))
    steps:
      - uses: actions/checkout@v4
      # frontend steps here

      

  sonarcloud-check:
    name: sonarcloud-check-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'pull_request' && (github.base_ref == 'dev' || github.base_ref == 'pre-release' || github.base_ref == 'master'))
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      # sonarcloud steps here

##############################################################################################################
### Dependency Check
##############################################################################################################

  dependencies-check:
    name: dependencies-check-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'pull_request')
    steps:
      - uses: actions/checkout@v4

##############################################################################################################
### Integration Tests (Databases)
##############################################################################################################

  h2-database-integration:
    name: h2-db-integration-check
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'pull_request' && (github.base_ref == 'dev' || github.base_ref == 'pre-release' || github.base_ref == 'master'))
    steps:
      - uses: actions/checkout@v4

  mysql-database-integration:
    name: mysql-db-integration-check
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'pull_request' && (github.base_ref == 'dev' || github.base_ref == 'pre-release' || github.base_ref == 'master'))
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

  mssql-database-integration:
    name: mssql-db-integration-check
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'pull_request' && (github.base_ref == 'dev' || github.base_ref == 'pre-release' || github.base_ref == 'master'))
    steps:
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

  oracle-database-integration:
    name: oracle-db-integration-check
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'pull_request' && (github.base_ref == 'dev' || github.base_ref == 'pre-release' || github.base_ref == 'master'))
    steps:
      - uses: actions/checkout@v4

  postgres-database-integration:
    name: postgres-db-integration-check
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'pull_request' && (github.base_ref == 'dev' || github.base_ref == 'pre-release' || github.base_ref == 'master'))
    steps:
      - uses: actions/checkout@v4


##############################################################################################################
### Update Artifact
##############################################################################################################

  update-artifact:
    name: update-artifact-${{ needs.set-environment.outputs.ENV_NAME }}
    needs: [set-environment]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev') ||
      (github.event_name == 'pull_request' && (github.base_ref == 'pre-release' || github.base_ref == 'master'))
    steps:
      - uses: actions/checkout@v4
      # update artifact steps here
