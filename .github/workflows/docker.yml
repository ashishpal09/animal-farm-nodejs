name: CI + Docker Build

on:
  pull_request:
    branches:
      - dev
      - pre-release
      - master
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - dev
          - pre-release
          - prod

jobs:
  set-environment:
      runs-on: ubuntu-latest
      outputs:
        ENV_NAME: ${{ steps.setenv.outputs.ENV_NAME }}
      steps:
        - id: setenv
          env:
            DISPATCH_ENV: ${{ github.event.inputs.environment || '' }}
            GITHUB_EVENT_NAME: ${{ github.event_name }}
            GITHUB_REF: ${{ github.ref }}
            GITHUB_REF_NAME: ${{ github.ref_name }}
            GITHUB_BASE_REF_NAME: ${{ github.base_ref }}
          run: |
            echo "Determining environment and image name..."
            if [[ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]]; then
              ENV_NAME="$DISPATCH_ENV"
            elif [[ "$GITHUB_BASE_REF_NAME" == "dev"  || "$GITHUB_REF_NAME" == "dev" ]]; then
              ENV_NAME=dev
            elif [[ "$GITHUB_BASE_REF_NAME" == "pre-release" || "$GITHUB_REF_NAME" == "pre-release" ]]; then
              ENV_NAME=pre-release
            elif [[ "$GITHUB_REF" == refs/tags/* || "$GITHUB_BASE_REF_NAME" == "master" || "$GITHUB_REF_NAME" == "master" ]]; then
              ENV_NAME=prod
            else
              ENV_NAME=dev
            fi
            echo "ENV_NAME=$ENV_NAME"
            echo "ENV_NAME=$ENV_NAME" >> $GITHUB_OUTPUT
  test:
    needs: set-environment
    if: |
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.environment == 'dev' || github.event.inputs.environment == 'pre-release'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  # 2. Docker build + push (only on push to master, not PRs)
  build-and-push:
    needs: [test , set-environment] 
    if: |
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.environment == 'dev' || github.event.inputs.environment == 'pre-release'))
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Check if MR target branch is allowed
        if: github.event_name == 'pull_request'
        run: |
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          if [[ "$BASE_BRANCH" != "dev" && "$BASE_BRANCH" != "pre-release" && "$BASE_BRANCH" != "master" ]]; then
            echo "This PR targets '$BASE_BRANCH' which is not an auto-triggered branch."
            echo "Skipping job. To run this check, trigger it manually via workflow_dispatch."
            exit 0
          fi

      # 2. Set up QEMU (for multi-arch builds)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 3. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 4. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. (Optional) Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHRC_TOKEN }}

      # 6. Build and Push
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/animal-farm-nodejs:latest
            ghcr.io/${{ github.repository_owner }}/animal-farm-nodejs:latest

